// <auto-generated />
using System;
using Ebebul.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ebebul.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ebebul.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            CreatDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Midwife"
                        },
                        new
                        {
                            Id = 3,
                            CreatDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Ebebul.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<string>("Birthplace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("IdentityNum")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Length")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Weight")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2022, 11, 29, 2, 43, 26, 904, DateTimeKind.Local).AddTicks(5555),
                            Birthplace = "Ümraniye",
                            CategoryId = 1,
                            CreatDate = new DateTime(2022, 11, 29, 2, 43, 26, 904, DateTimeKind.Local).AddTicks(5563),
                            Email = "nurullahguguk@gmail.com",
                            Gender = 2,
                            IdentityNum = "40282523972",
                            Length = 180,
                            Location = "Beykoz",
                            Name = "Nurullah",
                            Password = "1234",
                            Surname = "Guguk",
                            UserName = "nurullahggk",
                            Weight = 102
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2022, 11, 29, 2, 43, 26, 904, DateTimeKind.Local).AddTicks(5565),
                            Birthplace = "Çekmeköy",
                            CategoryId = 2,
                            CreatDate = new DateTime(2022, 11, 29, 2, 43, 26, 904, DateTimeKind.Local).AddTicks(5566),
                            Email = "beyzayldrm@gmail.com",
                            Gender = 1,
                            IdentityNum = "10325523928",
                            Length = 163,
                            Location = "Pendik",
                            Name = "Beyza",
                            Password = "1234",
                            Surname = "Yıldırım",
                            UserName = "beyzayldrm",
                            Weight = 65
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(2022, 11, 29, 2, 43, 26, 904, DateTimeKind.Local).AddTicks(5567),
                            Birthplace = "Bursa",
                            CategoryId = 3,
                            CreatDate = new DateTime(2022, 11, 29, 2, 43, 26, 904, DateTimeKind.Local).AddTicks(5567),
                            Email = "sencan@gmail.com",
                            Gender = 1,
                            IdentityNum = "10586954732",
                            Length = 155,
                            Location = "Maltepe",
                            Name = "Sena",
                            Password = "1234",
                            Surname = "Can",
                            UserName = "sencan",
                            Weight = 65
                        });
                });

            modelBuilder.Entity("Ebebul.Core.Models.User", b =>
                {
                    b.HasOne("Ebebul.Core.Models.Category", "Category")
                        .WithMany("Users")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ebebul.Core.Models.Category", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
